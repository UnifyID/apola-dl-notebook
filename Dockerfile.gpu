# Set the base image to Ubuntu
FROM tensorflow/tensorflow:1.1.0-gpu-py3

# File Author / Maintainer
MAINTAINER Lef Ioannidis

# Install cuda
ENV CUDA_VERSION 8.0.61

ENV CUDA_PKG_VERSION 8-0=$CUDA_VERSION-1

RUN NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 && \
    NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 && \
    apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub && \
    apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub && \
    echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum -c --strict - && rm cudasign.pub && \
    echo "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/cuda.list
# Install git and caffe2 dependencies
RUN apt-get update && \
    apt-get install -yq --no-install-recommends libboost-all-dev && \
    apt-get install -yqq software-properties-common \
    python-pip \
    git \
    wget \
    cmake \
    libgoogle-glog-dev \
    libprotobuf-dev \
    libopencv-dev \
    protobuf-compiler \
    python3-dev \
    python3-pip \
    libgtest-dev \
    libiomp-dev \
    libleveldb-dev \
    liblmdb-dev \
    libopenmpi-dev \
    libsnappy-dev \
    openmpi-bin \
    openmpi-doc \
    python3-pydot

RUN wget -qO - http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub | apt-key add - && \
	apt-get update && apt-get install -y --no-install-recommends --force-yes \
        cuda-core-$CUDA_PKG_VERSION \
        cuda-misc-headers-$CUDA_PKG_VERSION \
        cuda-command-line-tools-$CUDA_PKG_VERSION \
        cuda-license-$CUDA_PKG_VERSION \
        cuda-nvrtc-dev-$CUDA_PKG_VERSION \
        cuda-cusolver-dev-$CUDA_PKG_VERSION \
        cuda-cublas-dev-$CUDA_PKG_VERSION \
        cuda-cufft-dev-$CUDA_PKG_VERSION \
        cuda-curand-dev-$CUDA_PKG_VERSION \
        cuda-cusparse-dev-$CUDA_PKG_VERSION \
        cuda-npp-dev-$CUDA_PKG_VERSION \
        cuda-cudart-dev-$CUDA_PKG_VERSION \
        cuda-driver-dev-$CUDA_PKG_VERSION && \
    ln -s cuda-8.0 /usr/local/cuda && \
    rm -rf /var/lib/apt/lists/*

RUN echo "/usr/local/cuda/lib" >> /etc/ld.so.conf.d/cuda.conf && \
    echo "/usr/local/cuda/lib64" >> /etc/ld.so.conf.d/cuda.conf && \
    ldconfig

RUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf

## Install PyTorch
RUN pip3 install http://download.pytorch.org/whl/cu80/torch-0.1.12.post2-cp35-cp35m-linux_x86_64.whl  && \
    pip3 install torchvision

### Install Caffe2 pip dependencies
#RUN pip3 install \
#    flask \
#    future \
#    graphviz \
#    hypothesis \
#    jupyter \
#    matplotlib \
#    pydot python-nvd3 \
#    pyyaml \
#    requests \
#    scikit-image \
#    scipy \
#    setuptools \
#    six \
#    tornado \
#    numpy
#
### Install Caffe
#RUN git clone --recursive https://github.com/caffe2/caffe2.git /root/caffe2 && \
#    cd /root/caffe2 && \
#    make && \
#    cd build && \
#    make install

## Caffe & Keras installation for Python
#RUN git clone https://github.com/BVLC/caffe.git /root/caffe && \
#    cd /root/caffe && \
#    pip install -r requirements.txt && \
#    mkdir build && cd build && \
#    cmake .. && \
#    make all && \
#    make install && \

COPY requirements.txt /notebooks
RUN  pip install keras && pip install nose && \
     pip install Cython && pip install -r requirements.txt
RUN rm requirements.txt
#ENV PYTHONPATH=/root/caffe/python/:$PYTHONPATH
RUN git clone https://github.com/nphoff/saxpy.git /root/saxpy
ENV PYTHONPATH=/root/saxpy:$PYTHONPATH
ENV PATH /usr/local/cuda/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/local/cuda/lib:/usr/local/cuda/lib64:${LD_LIBRARY_PATH}
ENV LIBRARY_PATH /usr/local/cuda/lib64/stubs:${LIBRARY_PATH}

# Expose ports
EXPOSE 8888

WORKDIR /notebooks


CMD ["/run_jupyter.sh", "--allow-root"]

